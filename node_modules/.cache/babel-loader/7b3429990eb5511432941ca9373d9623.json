{"ast":null,"code":"var _jsxFileName = \"/home/asus/dapify/src/private-route.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getAuthenticationStatus } from \"../src/Redux/auth-service\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { PROFILE_URL } from './Redux/actions/type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  // store profile id for visit other user profile\n  const dispatch = useDispatch();\n  const path = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\") + 1);\n\n  if (getAuthenticationStatus() !== true && path === '/userProfile/') {\n    dispatch({\n      type: PROFILE_URL,\n      data: window.location.pathname\n    });\n  }\n\n  console.log('myauthhhh', getAuthenticationStatus());\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => getAuthenticationStatus() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","getAuthenticationStatus","Route","Redirect","useDispatch","PROFILE_URL","PrivateRoute","component","Component","rest","dispatch","path","window","location","pathname","substring","lastIndexOf","type","data","console","log","props"],"sources":["/home/asus/dapify/src/private-route.js"],"sourcesContent":["import React from \"react\";\nimport { getAuthenticationStatus } from \"../src/Redux/auth-service\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {PROFILE_URL} from './Redux/actions/type';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // store profile id for visit other user profile\n  const dispatch = useDispatch();\n  const path = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\") + 1);\n  if(getAuthenticationStatus() !== true && path === '/userProfile/')\n  {\n    dispatch({ type: PROFILE_URL, data: window.location.pathname });\n  }\n\n\n console.log('myauthhhh',getAuthenticationStatus());\n  return (\n\n    <Route\n      {...rest}\n      render={(props) =>\n       \n        getAuthenticationStatus() ? (\n       \n          <Component {...props} />\n        ) : (\n          <Redirect\n          to={{\n            pathname: \"/\",\n          }}\n        />\n        )\n      }\n    />\n\n  );\n};\n\n\nexport default PrivateRoute;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,WAAR,QAA0B,sBAA1B;;;AAEA,MAAMC,YAAY,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAsC;EAE1D;EACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCH,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBE,WAAzB,CAAqC,GAArC,IAA4C,CAAlF,CAAb;;EACA,IAAGf,uBAAuB,OAAO,IAA9B,IAAsCU,IAAI,KAAK,eAAlD,EACA;IACED,QAAQ,CAAC;MAAEO,IAAI,EAAEZ,WAAR;MAAqBa,IAAI,EAAEN,MAAM,CAACC,QAAP,CAAgBC;IAA3C,CAAD,CAAR;EACD;;EAGFK,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBnB,uBAAuB,EAA/C;EACC,oBAEE,QAAC,KAAD,OACMQ,IADN;IAEE,MAAM,EAAGY,KAAD,IAENpB,uBAAuB,kBAErB,QAAC,SAAD,OAAeoB;IAAf;MAAA;MAAA;MAAA;IAAA,QAFqB,gBAIrB,QAAC,QAAD;MACA,EAAE,EAAE;QACFP,QAAQ,EAAE;MADR;IADJ;MAAA;MAAA;MAAA;IAAA;EARN;IAAA;IAAA;IAAA;EAAA,QAFF;AAoBD,CAhCD;;GAAMR,Y;UAGaF,W;;;KAHbE,Y;AAmCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}