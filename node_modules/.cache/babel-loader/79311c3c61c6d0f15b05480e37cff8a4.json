{"ast":null,"code":"var _jsxFileName = \"/home/asus/dapify/src/templates/view/Insights/facebookConnect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Tabs, Tab, Accordion } from 'react-bootstrap';\nimport UserProfile from '../../components/userProfile';\nimport { getUserProfileById, fetchUser } from \"../../../Redux/actions/auth-actions\";\nimport { Button } from '@material-ui/core';\nimport { useSelector, connect } from \"react-redux\";\nimport facebook_icon from \"../../../assets/images/logos_facebook.svg\";\nimport { getInstgramInsightsUser } from \"../../../Redux/actions/insights-Instagram-actions\";\nimport Loader from './../../../utils/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FacebookConnect(props) {\n  _s();\n\n  const [isLoader, setLoader] = useState(true);\n  const {\n    userDetailsById,\n    authuser\n  } = useSelector(state => state.authReducer);\n  useEffect(() => {\n    setLoader(false);\n\n    async function fetchdata() {\n      await props.getUserProfileById(authuser.uid);\n    }\n\n    fetchdata();\n  }, [authuser.uid]);\n\n  const onSocialLogin = async event => {\n    setLoader(true);\n\n    if (userDetailsById.uid) {\n      var accountLinked = false;\n\n      if (userDetailsById !== null && userDetailsById !== void 0 && userDetailsById.InsightsTokenData) {\n        accountLinked = true;\n      } else {\n        accountLinked = false;\n      }\n\n      await props.getInstgramInsightsUser(userDetailsById.uid, accountLinked);\n      setLoader(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-3\",\n    children: [isLoader ? /*#__PURE__*/_jsxDEV(Loader, {\n      isLoader: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-2\",\n      children: \"Connect with facebook to check insights.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => onSocialLogin('facebook'),\n      className: \"btn btn-danger\",\n      children: \"Connect with facebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FacebookConnect, \"T7GXBTjmuep6meV2P3Io9qA9g+4=\", false, function () {\n  return [useSelector];\n});\n\n_c = FacebookConnect;\n\nconst mapStateToProps = state => {\n  return {\n    userDetailsById: state.authReducer.userDetailsById,\n    authuser: state.authReducer.authuser\n  };\n};\n\nconst actionCreators = {\n  getUserProfileById,\n  fetchUser,\n  getInstgramInsightsUser\n};\nexport default connect(mapStateToProps, actionCreators)(FacebookConnect);\n\nvar _c;\n\n$RefreshReg$(_c, \"FacebookConnect\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Dropdown","Tabs","Tab","Accordion","UserProfile","getUserProfileById","fetchUser","Button","useSelector","connect","getInstgramInsightsUser","Loader","FacebookConnect","props","isLoader","setLoader","userDetailsById","authuser","state","authReducer","fetchdata","uid","onSocialLogin","event","accountLinked","InsightsTokenData","e","mapStateToProps","actionCreators"],"sources":["/home/asus/dapify/src/templates/view/Insights/facebookConnect.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\nimport Navbar from '../Navbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Tabs, Tab, Accordion } from 'react-bootstrap'\nimport UserProfile from '../../components/userProfile';\nimport { getUserProfileById,fetchUser } from \"../../../Redux/actions/auth-actions\";\nimport { Button } from '@material-ui/core'\nimport { useSelector, connect } from \"react-redux\"; \nimport facebook_icon from '../../../assets/images/logos_facebook.svg';\nimport { getInstgramInsightsUser} from \"../../../Redux/actions/insights-Instagram-actions\";\nimport Loader from './../../../utils/Loader';\n\nfunction FacebookConnect(props) {\n    const [isLoader, setLoader] = useState(true);\n\n    const { userDetailsById,authuser} = useSelector((state) => state.authReducer);\n\n    useEffect(() => {\n        setLoader(false);\n        async function fetchdata(){\n          \n            await props.getUserProfileById(authuser.uid);  \n        }\n        fetchdata();\n        \n    },[authuser.uid]);\n\n    const onSocialLogin = async (event) => {\n        setLoader(true);\n        if(userDetailsById.uid){\n            var accountLinked = false;\n            if(userDetailsById?.InsightsTokenData)\n            {\n                accountLinked = true;\n            }\n            else{\n                accountLinked = false;\n            }\n            await props.getInstgramInsightsUser(userDetailsById.uid,accountLinked);\n            setLoader(false);\n        }\n    }\n\n    return (\n        \n        <div className=\"text-center mt-3\">\n            {isLoader ? <Loader isLoader={true} /> : null}\n            <p className=\"mb-2\">Connect with facebook to check insights.</p>\n            <Button onClick={e => onSocialLogin('facebook')} className=\"btn btn-danger\">Connect with facebook</Button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userDetailsById: state.authReducer.userDetailsById,\n        authuser: state.authReducer.authuser,\n    }\n}\n\nconst actionCreators = {  getUserProfileById,fetchUser,getInstgramInsightsUser };\nexport default connect(mapStateToProps, actionCreators)(FacebookConnect);\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,iBAArC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,kBAAT,EAA4BC,SAA5B,QAA6C,qCAA7C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;;AAEA,SAASC,uBAAT,QAAuC,mDAAvC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAM;IAAEkB,eAAF;IAAkBC;EAAlB,IAA8BT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/C;EAEAtB,SAAS,CAAC,MAAM;IACZkB,SAAS,CAAC,KAAD,CAAT;;IACA,eAAeK,SAAf,GAA0B;MAEtB,MAAMP,KAAK,CAACR,kBAAN,CAAyBY,QAAQ,CAACI,GAAlC,CAAN;IACH;;IACDD,SAAS;EAEZ,CARQ,EAQP,CAACH,QAAQ,CAACI,GAAV,CARO,CAAT;;EAUA,MAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;IACnCR,SAAS,CAAC,IAAD,CAAT;;IACA,IAAGC,eAAe,CAACK,GAAnB,EAAuB;MACnB,IAAIG,aAAa,GAAG,KAApB;;MACA,IAAGR,eAAH,aAAGA,eAAH,eAAGA,eAAe,CAAES,iBAApB,EACA;QACID,aAAa,GAAG,IAAhB;MACH,CAHD,MAII;QACAA,aAAa,GAAG,KAAhB;MACH;;MACD,MAAMX,KAAK,CAACH,uBAAN,CAA8BM,eAAe,CAACK,GAA9C,EAAkDG,aAAlD,CAAN;MACAT,SAAS,CAAC,KAAD,CAAT;IACH;EACJ,CAdD;;EAgBA,oBAEI;IAAK,SAAS,EAAC,kBAAf;IAAA,WACKD,QAAQ,gBAAG,QAAC,MAAD;MAAQ,QAAQ,EAAE;IAAlB;MAAA;MAAA;MAAA;IAAA,QAAH,GAAgC,IAD7C,eAEI;MAAG,SAAS,EAAC,MAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,MAAD;MAAQ,OAAO,EAAEY,CAAC,IAAIJ,aAAa,CAAC,UAAD,CAAnC;MAAiD,SAAS,EAAC,gBAA3D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAQH;;GAvCQV,e;UAG+BJ,W;;;KAH/BI,e;;AAyCT,MAAMe,eAAe,GAAIT,KAAD,IAAW;EAC/B,OAAO;IACHF,eAAe,EAAEE,KAAK,CAACC,WAAN,CAAkBH,eADhC;IAEHC,QAAQ,EAAEC,KAAK,CAACC,WAAN,CAAkBF;EAFzB,CAAP;AAIH,CALD;;AAOA,MAAMW,cAAc,GAAG;EAAGvB,kBAAH;EAAsBC,SAAtB;EAAgCI;AAAhC,CAAvB;AACA,eAAeD,OAAO,CAACkB,eAAD,EAAkBC,cAAlB,CAAP,CAAyChB,eAAzC,CAAf"},"metadata":{},"sourceType":"module"}