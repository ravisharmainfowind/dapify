{"ast":null,"code":"import { POST_USER_NOTIFICATION_REQUEST, GET_USER_NOTIFICATION_SUCCESS, GET_USER_NOTIFICATION_FAILURE, UNREAD_NOTIFICATION_COUNT_REQUEST, UNREAD_NOTIFICATION_COUNT_SUCCESS, UNREAD_NOTIFICATION_COUNT_FAILURE, REMOVE_NOTIFICATION_REQUEST, REMOVE_NOTIFICATION_SUCCESS, REMOVE_NOTIFICATION_FAILURE } from '../actions/type';\nexport const initialState = {\n  notification_data: [],\n  Total_notification: 0,\n  UserUnreadNotificationCount: 0,\n  RemoveNotificationId: ''\n};\nexport default function notificationReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REMOVE_NOTIFICATION_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case REMOVE_NOTIFICATION_SUCCESS:\n      return { ...state,\n        RemoveNotificationId: action.payload,\n        loading: false\n      };\n\n    case REMOVE_NOTIFICATION_FAILURE:\n      return { ...state,\n        errors: action.payload,\n        loading: false\n      };\n\n    case UNREAD_NOTIFICATION_COUNT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case UNREAD_NOTIFICATION_COUNT_SUCCESS:\n      return { ...state,\n        UserUnreadNotificationCount: action.payload,\n        loading: false\n      };\n\n    case UNREAD_NOTIFICATION_COUNT_FAILURE:\n      return { ...state,\n        errors: action.payload,\n        loading: false\n      };\n\n    case POST_USER_NOTIFICATION_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_USER_NOTIFICATION_SUCCESS:\n      return { ...state,\n        notification_data: action.payload,\n        Total_notification: action.notificationTotal,\n        loading: false\n      };\n\n    case GET_USER_NOTIFICATION_FAILURE:\n      return { ...state,\n        errors: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["POST_USER_NOTIFICATION_REQUEST","GET_USER_NOTIFICATION_SUCCESS","GET_USER_NOTIFICATION_FAILURE","UNREAD_NOTIFICATION_COUNT_REQUEST","UNREAD_NOTIFICATION_COUNT_SUCCESS","UNREAD_NOTIFICATION_COUNT_FAILURE","REMOVE_NOTIFICATION_REQUEST","REMOVE_NOTIFICATION_SUCCESS","REMOVE_NOTIFICATION_FAILURE","initialState","notification_data","Total_notification","UserUnreadNotificationCount","RemoveNotificationId","notificationReducer","state","action","type","loading","payload","errors","notificationTotal"],"sources":["/home/asus/dapify/src/Redux/reducers/notificationsReducer.js"],"sourcesContent":["import {\n    POST_USER_NOTIFICATION_REQUEST,GET_USER_NOTIFICATION_SUCCESS,GET_USER_NOTIFICATION_FAILURE,\n    UNREAD_NOTIFICATION_COUNT_REQUEST, UNREAD_NOTIFICATION_COUNT_SUCCESS, UNREAD_NOTIFICATION_COUNT_FAILURE,\n    REMOVE_NOTIFICATION_REQUEST,REMOVE_NOTIFICATION_SUCCESS,REMOVE_NOTIFICATION_FAILURE,\n\n} from '../actions/type';\n\nexport const initialState = {\n    notification_data: [],\n    Total_notification:0,\n    UserUnreadNotificationCount : 0,\n    RemoveNotificationId: '',\n   \n};\n\nexport default function notificationReducer(state = initialState, action) {\n   \n    switch (action.type) {\n        case REMOVE_NOTIFICATION_REQUEST:\n            return {\n                ...state,\n                loading: true\n            };\n        case REMOVE_NOTIFICATION_SUCCESS:\n            return {\n                ...state,\n                RemoveNotificationId: action.payload,\n                loading: false\n            };\n        case REMOVE_NOTIFICATION_FAILURE:\n            return {\n                ...state,\n                errors: action.payload,\n                loading: false\n            };\n        case UNREAD_NOTIFICATION_COUNT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            };\n        case UNREAD_NOTIFICATION_COUNT_SUCCESS:\n            return {\n                ...state,\n                UserUnreadNotificationCount: action.payload,\n                loading: false\n            };\n        case UNREAD_NOTIFICATION_COUNT_FAILURE:\n            return {\n                ...state,\n                errors: action.payload,\n                loading: false\n            };\n        case POST_USER_NOTIFICATION_REQUEST:\n            return {\n                ...state,\n                loading: true\n            };\n        case GET_USER_NOTIFICATION_SUCCESS:\n            return {\n                ...state,\n                notification_data: action.payload,\n                Total_notification : action.notificationTotal,\n                loading: false,\n            };\n        case GET_USER_NOTIFICATION_FAILURE:\n            return {\n                ...state,\n                errors: action.payload,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n"],"mappings":"AAAA,SACIA,8BADJ,EACmCC,6BADnC,EACiEC,6BADjE,EAEIC,iCAFJ,EAEuCC,iCAFvC,EAE0EC,iCAF1E,EAGIC,2BAHJ,EAGgCC,2BAHhC,EAG4DC,2BAH5D,QAKO,iBALP;AAOA,OAAO,MAAMC,YAAY,GAAG;EACxBC,iBAAiB,EAAE,EADK;EAExBC,kBAAkB,EAAC,CAFK;EAGxBC,2BAA2B,EAAG,CAHN;EAIxBC,oBAAoB,EAAE;AAJE,CAArB;AAQP,eAAe,SAASC,mBAAT,GAA2D;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;;EAEtE,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,2BAAL;MACI,OAAO,EACH,GAAGS,KADA;QAEHG,OAAO,EAAE;MAFN,CAAP;;IAIJ,KAAKX,2BAAL;MACI,OAAO,EACH,GAAGQ,KADA;QAEHF,oBAAoB,EAAEG,MAAM,CAACG,OAF1B;QAGHD,OAAO,EAAE;MAHN,CAAP;;IAKJ,KAAKV,2BAAL;MACI,OAAO,EACH,GAAGO,KADA;QAEHK,MAAM,EAAEJ,MAAM,CAACG,OAFZ;QAGHD,OAAO,EAAE;MAHN,CAAP;;IAKJ,KAAKf,iCAAL;MACI,OAAO,EACH,GAAGY,KADA;QAEHG,OAAO,EAAE;MAFN,CAAP;;IAIJ,KAAKd,iCAAL;MACI,OAAO,EACH,GAAGW,KADA;QAEHH,2BAA2B,EAAEI,MAAM,CAACG,OAFjC;QAGHD,OAAO,EAAE;MAHN,CAAP;;IAKJ,KAAKb,iCAAL;MACI,OAAO,EACH,GAAGU,KADA;QAEHK,MAAM,EAAEJ,MAAM,CAACG,OAFZ;QAGHD,OAAO,EAAE;MAHN,CAAP;;IAKJ,KAAKlB,8BAAL;MACI,OAAO,EACH,GAAGe,KADA;QAEHG,OAAO,EAAE;MAFN,CAAP;;IAIJ,KAAKjB,6BAAL;MACI,OAAO,EACH,GAAGc,KADA;QAEHL,iBAAiB,EAAEM,MAAM,CAACG,OAFvB;QAGHR,kBAAkB,EAAGK,MAAM,CAACK,iBAHzB;QAIHH,OAAO,EAAE;MAJN,CAAP;;IAMJ,KAAKhB,6BAAL;MACI,OAAO,EACH,GAAGa,KADA;QAEHK,MAAM,EAAEJ,MAAM,CAACG,OAFZ;QAGHD,OAAO,EAAE;MAHN,CAAP;;IAKJ;MACI,OAAOH,KAAP;EAtDR;AAwDH"},"metadata":{},"sourceType":"module"}