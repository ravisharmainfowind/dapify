{"ast":null,"code":"var _jsxFileName = \"/home/asus/dapify/src/templates/view/Settings/bioSetting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@material-ui/core'; //Redux\n\nimport { useSelector, connect } from \"react-redux\";\nimport { updateUserProfile, getUserProfileById, fetchUser } from \"../../../Redux/actions/auth-actions\";\nimport Loader from './../../../utils/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BioSetting(props, _ref) {\n  _s();\n\n  var _errors$bio;\n\n  let {\n    history\n  } = _ref;\n  const {\n    userDetailsById,\n    authuser,\n    loading\n  } = useSelector(state => state.authReducer);\n  const [isLoader, setLoader] = useState(false);\n  useEffect(() => {\n    async function fetchdata() {\n      if (authuser) await props.getUserProfileById(authuser.uid);\n      setLoader(loading);\n    }\n\n    fetchdata();\n  }, [authuser.uid]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  useEffect(() => {\n    if (userDetailsById.bio) {\n      var biores = userDetailsById.bio.replace(/\\\\n/g, \"\\n\");\n    }\n\n    reset({\n      bio: biores\n    });\n  }, [userDetailsById, reset]);\n\n  const onSubmit = async event => {\n    const data = {\n      update_type: 'bio',\n      bio: event.bio\n    };\n    await props.updateUserProfile(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [isLoader ? /*#__PURE__*/_jsxDEV(Loader, {\n      isLoader: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-inner-content1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row1 inp2\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"bio\",\n          className: \"form-control log-inp\",\n          placeholder: userDetailsById.bio === \"\" ? \"Enter your Bio here\" : \"\",\n          ...register('bio', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$bio = errors.bio) === null || _errors$bio === void 0 ? void 0 : _errors$bio.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errMsg\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-via\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"log-btn btn\",\n          children: \"Update BIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BioSetting, \"TbJxHbEGQU/ue4ryoKX3qpJR6SI=\", false, function () {\n  return [useSelector, useForm];\n});\n\n_c = BioSetting;\n\nconst mapStateToProps = state => {\n  return {\n    userDetailsById: state.authReducer.userDetailsById,\n    authuser: state.authReducer.authuser,\n    loading: state.authReducer.loading\n  };\n};\n\nconst actionCreators = {\n  getUserProfileById,\n  updateUserProfile,\n  fetchUser\n};\nexport default connect(mapStateToProps, actionCreators)(BioSetting);\n\nvar _c;\n\n$RefreshReg$(_c, \"BioSetting\");","map":{"version":3,"names":["React","useState","useEffect","useForm","Button","useSelector","connect","updateUserProfile","getUserProfileById","fetchUser","Loader","BioSetting","props","history","userDetailsById","authuser","loading","state","authReducer","isLoader","setLoader","fetchdata","uid","register","handleSubmit","reset","formState","errors","mode","bio","biores","replace","onSubmit","event","data","update_type","required","type","mapStateToProps","actionCreators"],"sources":["/home/asus/dapify/src/templates/view/Settings/bioSetting.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@material-ui/core'\n\n//Redux\n\nimport {  useSelector,connect } from \"react-redux\";\nimport { updateUserProfile,getUserProfileById,fetchUser } from \"../../../Redux/actions/auth-actions\";\nimport Loader from './../../../utils/Loader';\n\nfunction BioSetting(props, { history }) {\n\n  const { userDetailsById,authuser,loading } = useSelector((state) => state.authReducer);\n  const [isLoader, setLoader] = useState(false);\n\n  useEffect(() => {\n    async function fetchdata(){\n    if(authuser)\n     await props.getUserProfileById(authuser.uid);\n      setLoader(loading);\n    }\n    fetchdata();\n},[authuser.uid]);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  useEffect( () => {\n\n    if(userDetailsById.bio){\n     var biores = userDetailsById.bio.replace(/\\\\n/g, \"\\n\");\n    }\n    reset({\n\n      bio: biores,\n      });\n   \n},[userDetailsById,reset]);\n\n  const onSubmit = async (event) => {\n    const data = {\n      update_type: 'bio',\n      bio: event.bio,\n    };\n    await props.updateUserProfile(data);\n  };\n\n  return (\n    \n    <form onSubmit={handleSubmit(onSubmit)}>\n      {isLoader ? <Loader isLoader={true} /> : null} \n     \n      <div className=\"tab-inner-content1\">\n        <div className=\"form-row1 inp2\">\n          <textarea name=\"bio\" className=\"form-control log-inp\"  placeholder={userDetailsById.bio === \"\" ? \"Enter your Bio here\" : \"\" } {...register('bio', {required: true, })} ></textarea>\n          {errors?.bio?.type === \"required\" && (\n            <p className=\"errMsg\">This field is required</p>\n          )}\n        </div>\n\n        <div className=\"login-via\">\n            <Button  type=\"submit\" className=\"log-btn btn\">\n            Update BIO\n            </Button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userDetailsById: state.authReducer.userDetailsById,\n    authuser: state.authReducer.authuser,\n    loading : state.authReducer.loading\n  }\n}\n\nconst actionCreators = { getUserProfileById,updateUserProfile,fetchUser };\nexport default connect(mapStateToProps, actionCreators)(BioSetting);\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}