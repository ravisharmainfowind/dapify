{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs3/core-js-stable/date/now\";\nimport { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\nimport debounceFn from './debounce';\n\nvar EventSpy = function EventSpy(_ref) {\n  var debounce = _ref.debounce,\n      name = _ref.name,\n      onEvent = _ref.onEvent,\n      target = _ref.target; // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n\n  var onEventRef = useRef();\n  onEventRef.current = onEvent;\n  var debouncer = useMemo(function () {\n    return debounceFn(function (event) {\n      var current = onEventRef.current;\n      current && current(event);\n    }, debounce);\n  }, [debounce, onEventRef]);\n  var handleEvent = useCallback(function (event) {\n    event.timeStampLow = _Date$now();\n    debouncer(event);\n  }, [debouncer]);\n  useLayoutEffect(function () {\n    target.addEventListener(name, handleEvent, {\n      passive: true\n    });\n    handleEvent({\n      target: target,\n      type: name\n    });\n    return function () {\n      return target.removeEventListener(name, handleEvent);\n    };\n  }, [name, handleEvent, target]);\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\nexport default EventSpy;","map":{"version":3,"sources":["../../src/EventSpy.js"],"names":["EventSpy","debounce","name","onEvent","target","onEventRef","useRef","debouncer","useMemo","debounceFn","current","handleEvent","useCallback","event","useLayoutEffect","passive","type"],"mappings":";AAAA,SAAA,WAAA,EAAA,eAAA,EAAA,OAAA,EAAA,MAAA,QAAA,OAAA;AAEA,OAAA,UAAA,MAAA,YAAA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAyC;EAAA,IAAtCC,QAAsC,GAAA,IAAA,CAAtCA,QAAsC;EAAA,IAA5BC,IAA4B,GAAA,IAAA,CAA5BA,IAA4B;EAAA,IAAtBC,OAAsB,GAAA,IAAA,CAAtBA,OAAsB;EAAA,IAAbC,MAAa,GAAA,IAAA,CAAbA,MAAa,CAAA,CACxD;EACA;;EACA,IAAMC,UAAU,GAAGC,MAAnB,EAAA;EAEAD,UAAU,CAAVA,OAAAA,GAAAA,OAAAA;EAEA,IAAME,SAAS,GAAGC,OAAO,CACvB,YAAA;IAAA,OACEC,UAAU,CAAC,UAAA,KAAA,EAAS;MAClB,IAAQC,OAAR,GAAoBL,UAApB,CAAA,OAAA;MAEAK,OAAO,IAAIA,OAAO,CAAlBA,KAAkB,CAAlBA;IAHQ,CAAA,EADZ,QACY,CADZ;EADuB,CAAA,EAOvB,CAAA,QAAA,EAPF,UAOE,CAPuB,CAAzB;EAUA,IAAMC,WAAW,GAAGC,WAAW,CAC7B,UAAA,KAAA,EAAS;IACPC,KAAK,CAALA,YAAAA,GAAqB,SAArBA,EAAAA;IAEAN,SAAS,CAATA,KAAS,CAATA;EAJ2B,CAAA,EAM7B,CANF,SAME,CAN6B,CAA/B;EASAO,eAAe,CAAC,YAAM;IACpBV,MAAM,CAANA,gBAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAA2C;MAAEW,OAAO,EAAE;IAAX,CAA3CX;IACAO,WAAW,CAAC;MAAEP,MAAM,EAAR,MAAA;MAAUY,IAAI,EAAEd;IAAhB,CAAD,CAAXS;IAEA,OAAO,YAAA;MAAA,OAAMP,MAAM,CAANA,mBAAAA,CAAAA,IAAAA,EAAN,WAAMA,CAAN;IAAP,CAAA;EAJa,CAAA,EAKZ,CAAA,IAAA,EAAA,WAAA,EALHU,MAKG,CALY,CAAfA;EAOA,OAAA,KAAA;AAjCF,CAAA;;AAoCAd,QAAQ,CAARA,YAAAA,GAAwB;EACtBC,QAAQ,EAAE;AADY,CAAxBD;AAIA,eAAA,QAAA","sourcesContent":["import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n"]},"metadata":{},"sourceType":"module"}