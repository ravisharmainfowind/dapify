{"ast":null,"code":"var _jsxFileName = \"/home/asus/dapify/src/templates/view/Settings/imageSetting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport user_cover_img from '../../../assets/images/user-cover-image.png';\nimport user_img from '../../../assets/images/dummy_user.png'; //Redux\n\nimport { useSelector, connect } from \"react-redux\";\nimport { getUserProfileById, updateUserProfileOrCoverImage, fetchUser } from \"../../../Redux/actions/auth-actions\";\nimport { ERROR } from './../../../utils/errors';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageSetting(props, _ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [currentTab, setCurrentTab] = useState('');\n  const [UserViewImage, setUserViewImage] = useState(null);\n  const [UserCoverViewImage, setCoverViewImage] = useState(null);\n  const {\n    userDetailsById,\n    authuser,\n    imagePath\n  } = useSelector(state => state.authReducer);\n  useEffect(() => {\n    if (props.activeTab) {\n      setCurrentTab(props.activeTab);\n    }\n\n    console.log('typeeeeeeeeeee', imagePath.type);\n\n    if (imagePath !== '') {\n      if (imagePath.type === \"user image\") {\n        setUserViewImage(imagePath.name);\n      }\n\n      if (imagePath.type === \"cover image\") {\n        setCoverViewImage(imagePath.name);\n      }\n    }\n  }, [imagePath, UserViewImage, props.activeTab]);\n  useEffect(() => {\n    async function fetchdata() {\n      if (authuser) await props.getUserProfileById(authuser.uid);\n    }\n\n    fetchdata();\n  }, [authuser, imagePath, currentTab]);\n\n  const UserImageChange = async e => {\n    const imageFile = e.target.files[0];\n\n    if (imageFile) {\n      let fileExtension = imageFile.name.split('.').pop();\n      let allowFiles = ['png', 'jpg', 'jpeg'];\n\n      if (allowFiles.includes(fileExtension)) {\n        setUserViewImage(URL.createObjectURL(e.target.files[0]));\n        const data = {\n          image: imageFile,\n          type: \"user image\",\n          name: URL.createObjectURL(e.target.files[0])\n        };\n        await props.updateUserProfileOrCoverImage(data, props.pagehistory);\n      } else {\n        ERROR(\"Please select only PNG, JPG & JPEG file\");\n      }\n    }\n  };\n\n  const CoverImageChange = async e => {\n    const imageFile = e.target.files[0];\n\n    if (imageFile) {\n      let fileExtension = imageFile.name.split('.').pop();\n      let allowFiles = ['png', 'jpg', 'jpeg'];\n\n      if (allowFiles.includes(fileExtension)) {\n        setCoverViewImage(URL.createObjectURL(e.target.files[0]));\n        const data = {\n          image: imageFile,\n          type: \"cover image\",\n          name: URL.createObjectURL(e.target.files[0])\n        };\n        await props.updateUserProfileOrCoverImage(data, props.pagehistory);\n      } else {\n        ERROR(\"Please select only PNG, JPG & JPEG file\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-cover-photos\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: UserViewImage ? UserViewImage : userDetailsById.avatarURL ? userDetailsById.avatarURL : user_img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-photo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-photo-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"file\",\n              children: \"change-photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"foo\",\n              name: \"user_image\",\n              type: \"file\",\n              id: \"file\",\n              onChange: UserImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cover-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: UserCoverViewImage ? UserCoverViewImage : userDetailsById.coverURL ? userDetailsById.coverURL : user_cover_img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-photo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-photo-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"cover_file\",\n              children: \"Change COVER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"coverimg\",\n              name: \"user_cover_image\",\n              type: \"file\",\n              id: \"cover_file\",\n              onChange: CoverImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageSetting, \"olPC/CCCswksYAjiDspL06jX/gQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ImageSetting;\n\nconst mapStateToProps = state => {\n  return {\n    userDetailsById: state.authReducer.userDetailsById,\n    imagePath: state.authReducer.imagePath,\n    authuser: state.authReducer.authuser\n  };\n};\n\nconst actionCreators = {\n  getUserProfileById,\n  updateUserProfileOrCoverImage,\n  fetchUser\n};\nexport default connect(mapStateToProps, actionCreators)(ImageSetting);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSetting\");","map":{"version":3,"names":["React","useState","useEffect","user_cover_img","user_img","useSelector","connect","getUserProfileById","updateUserProfileOrCoverImage","fetchUser","ERROR","ImageSetting","props","history","currentTab","setCurrentTab","UserViewImage","setUserViewImage","UserCoverViewImage","setCoverViewImage","userDetailsById","authuser","imagePath","state","authReducer","activeTab","console","log","type","name","fetchdata","uid","UserImageChange","e","imageFile","target","files","fileExtension","split","pop","allowFiles","includes","URL","createObjectURL","data","image","pagehistory","CoverImageChange","avatarURL","coverURL","mapStateToProps","actionCreators"],"sources":["/home/asus/dapify/src/templates/view/Settings/imageSetting.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport user_cover_img from '../../../assets/images/user-cover-image.png';\nimport user_img from '../../../assets/images/dummy_user.png';\n\n//Redux\nimport { useSelector, connect } from \"react-redux\";\nimport { getUserProfileById,updateUserProfileOrCoverImage,fetchUser } from \"../../../Redux/actions/auth-actions\";\nimport { ERROR } from './../../../utils/errors';\nimport 'antd/dist/antd.css'\n\nfunction ImageSetting(props,{history}) {\n    \n    const [currentTab, setCurrentTab ] = useState('');\n    const [UserViewImage, setUserViewImage] = useState(null);\n    const [UserCoverViewImage, setCoverViewImage] = useState(null);\n    const { userDetailsById,authuser,imagePath } = useSelector((state) => state.authReducer);\n\n   \n    useEffect(() => { \n        if(props.activeTab)\n        {\n            setCurrentTab(props.activeTab);\n        }\n\n        console.log('typeeeeeeeeeee',imagePath.type);\n        if(imagePath !== ''){\n            if(imagePath.type === \"user image\"){\n                setUserViewImage(imagePath.name) \n            }\n            if(imagePath.type === \"cover image\"){\n                setCoverViewImage(imagePath.name) \n            }\n        }\n    },[imagePath,UserViewImage,props.activeTab]);\n    \n    useEffect(() => {\n     \n        async function fetchdata(){\n            if(authuser)\n                await props.getUserProfileById(authuser.uid);\n            }\n            fetchdata();\n    },[authuser,imagePath,currentTab]);\n\n  \n    const UserImageChange =  async (e) => {\n       \n        const imageFile = e.target.files[0];\n      \n        if (imageFile) {\n            let fileExtension = imageFile.name.split('.').pop();\n            let allowFiles = ['png', 'jpg', 'jpeg'];\n            if(allowFiles.includes(fileExtension)){\n                setUserViewImage(URL.createObjectURL(e.target.files[0]));\n                const data = {\n                    image: imageFile,\n                    type: \"user image\",\n                    name: URL.createObjectURL(e.target.files[0]),\n                };\n                await props.updateUserProfileOrCoverImage(data,props.pagehistory);\n            }else {\n                ERROR(\"Please select only PNG, JPG & JPEG file\");\n            }\n        }\n    }\n\n    const CoverImageChange = async (e) => {\n      \n        const imageFile = e.target.files[0];\n        if (imageFile) {\n            let fileExtension = imageFile.name.split('.').pop();\n            let allowFiles = ['png', 'jpg', 'jpeg'];\n            if(allowFiles.includes(fileExtension)){\n                setCoverViewImage(URL.createObjectURL(e.target.files[0])); \n                const data = {\n                    image: imageFile,\n                    type: \"cover image\",\n                    name: URL.createObjectURL(e.target.files[0]),\n                };\n\n                 await props.updateUserProfileOrCoverImage(data,props.pagehistory);\n            }\n            else {\n                ERROR(\"Please select only PNG, JPG & JPEG file\");\n            }\n        }\n    }\n    \n    return (\n      \n        <div className=\"profile-cover-photos\">\n             \n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"user-img\">\n                        <img src={UserViewImage ? UserViewImage : userDetailsById.avatarURL ? userDetailsById.avatarURL :user_img} alt='' />\n                    </div>\n                    <div className=\"change-photo\">                       \n                        <div className=\"change-photo-inner\">\n                            <label for=\"file\">change-photo</label>\n                            <input className=\"foo\" name=\"user_image\" type=\"file\" id=\"file\" onChange={UserImageChange} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-6\">\n                    <div className=\"cover-img\">\n                        <img src={UserCoverViewImage ? UserCoverViewImage : userDetailsById.coverURL ? userDetailsById.coverURL  : user_cover_img} alt='' />\n                    </div>\n                    <div className=\"change-photo\">\n                        <div className=\"change-photo-inner\">\n                            <label for=\"cover_file\">Change COVER</label> \n                            <input className=\"coverimg\" name=\"user_cover_image\" type=\"file\" id=\"cover_file\" onChange={CoverImageChange} />\n                        </div>                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userDetailsById: state.authReducer.userDetailsById,\n        imagePath: state.authReducer.imagePath,\n        authuser: state.authReducer.authuser,\n    }\n}\n\nconst actionCreators = { getUserProfileById, updateUserProfileOrCoverImage,fetchUser };\nexport default connect(mapStateToProps, actionCreators)(ImageSetting);\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,QAAP,MAAqB,uCAArB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,SAASC,kBAAT,EAA4BC,6BAA5B,EAA0DC,SAA1D,QAA2E,qCAA3E;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,OAAO,oBAAP;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,QAAuC;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAEnC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA+Bd,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAACiB,kBAAD,EAAqBC,iBAArB,IAA0ClB,QAAQ,CAAC,IAAD,CAAxD;EACA,MAAM;IAAEmB,eAAF;IAAkBC,QAAlB;IAA2BC;EAA3B,IAAyCjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA1D;EAGAtB,SAAS,CAAC,MAAM;IACZ,IAAGU,KAAK,CAACa,SAAT,EACA;MACIV,aAAa,CAACH,KAAK,CAACa,SAAP,CAAb;IACH;;IAEDC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BL,SAAS,CAACM,IAAvC;;IACA,IAAGN,SAAS,KAAK,EAAjB,EAAoB;MAChB,IAAGA,SAAS,CAACM,IAAV,KAAmB,YAAtB,EAAmC;QAC/BX,gBAAgB,CAACK,SAAS,CAACO,IAAX,CAAhB;MACH;;MACD,IAAGP,SAAS,CAACM,IAAV,KAAmB,aAAtB,EAAoC;QAChCT,iBAAiB,CAACG,SAAS,CAACO,IAAX,CAAjB;MACH;IACJ;EACJ,CAfQ,EAeP,CAACP,SAAD,EAAWN,aAAX,EAAyBJ,KAAK,CAACa,SAA/B,CAfO,CAAT;EAiBAvB,SAAS,CAAC,MAAM;IAEZ,eAAe4B,SAAf,GAA0B;MACtB,IAAGT,QAAH,EACI,MAAMT,KAAK,CAACL,kBAAN,CAAyBc,QAAQ,CAACU,GAAlC,CAAN;IACH;;IACDD,SAAS;EAChB,CAPQ,EAOP,CAACT,QAAD,EAAUC,SAAV,EAAoBR,UAApB,CAPO,CAAT;;EAUA,MAAMkB,eAAe,GAAI,MAAOC,CAAP,IAAa;IAElC,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;;IAEA,IAAIF,SAAJ,EAAe;MACX,IAAIG,aAAa,GAAGH,SAAS,CAACL,IAAV,CAAeS,KAAf,CAAqB,GAArB,EAA0BC,GAA1B,EAApB;MACA,IAAIC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAjB;;MACA,IAAGA,UAAU,CAACC,QAAX,CAAoBJ,aAApB,CAAH,EAAsC;QAClCpB,gBAAgB,CAACyB,GAAG,CAACC,eAAJ,CAAoBV,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAhB;QACA,MAAMQ,IAAI,GAAG;UACTC,KAAK,EAAEX,SADE;UAETN,IAAI,EAAE,YAFG;UAGTC,IAAI,EAAEa,GAAG,CAACC,eAAJ,CAAoBV,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;QAHG,CAAb;QAKA,MAAMxB,KAAK,CAACJ,6BAAN,CAAoCoC,IAApC,EAAyChC,KAAK,CAACkC,WAA/C,CAAN;MACH,CARD,MAQM;QACFpC,KAAK,CAAC,yCAAD,CAAL;MACH;IACJ;EACJ,CAnBD;;EAqBA,MAAMqC,gBAAgB,GAAG,MAAOd,CAAP,IAAa;IAElC,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;;IACA,IAAIF,SAAJ,EAAe;MACX,IAAIG,aAAa,GAAGH,SAAS,CAACL,IAAV,CAAeS,KAAf,CAAqB,GAArB,EAA0BC,GAA1B,EAApB;MACA,IAAIC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAjB;;MACA,IAAGA,UAAU,CAACC,QAAX,CAAoBJ,aAApB,CAAH,EAAsC;QAClClB,iBAAiB,CAACuB,GAAG,CAACC,eAAJ,CAAoBV,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAjB;QACA,MAAMQ,IAAI,GAAG;UACTC,KAAK,EAAEX,SADE;UAETN,IAAI,EAAE,aAFG;UAGTC,IAAI,EAAEa,GAAG,CAACC,eAAJ,CAAoBV,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;QAHG,CAAb;QAMC,MAAMxB,KAAK,CAACJ,6BAAN,CAAoCoC,IAApC,EAAyChC,KAAK,CAACkC,WAA/C,CAAN;MACJ,CATD,MAUK;QACDpC,KAAK,CAAC,yCAAD,CAAL;MACH;IACJ;EACJ,CApBD;;EAsBA,oBAEI;IAAK,SAAS,EAAC,sBAAf;IAAA,uBAEI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UAAK,SAAS,EAAC,UAAf;UAAA,uBACI;YAAK,GAAG,EAAEM,aAAa,GAAGA,aAAH,GAAmBI,eAAe,CAAC4B,SAAhB,GAA4B5B,eAAe,CAAC4B,SAA5C,GAAuD5C,QAAjG;YAA2G,GAAG,EAAC;UAA/G;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAK,SAAS,EAAC,cAAf;UAAA,uBACI;YAAK,SAAS,EAAC,oBAAf;YAAA,wBACI;cAAO,GAAG,EAAC,MAAX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAO,SAAS,EAAC,KAAjB;cAAuB,IAAI,EAAC,YAA5B;cAAyC,IAAI,EAAC,MAA9C;cAAqD,EAAE,EAAC,MAAxD;cAA+D,QAAQ,EAAE4B;YAAzE;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAaI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UAAK,SAAS,EAAC,WAAf;UAAA,uBACI;YAAK,GAAG,EAAEd,kBAAkB,GAAGA,kBAAH,GAAwBE,eAAe,CAAC6B,QAAhB,GAA2B7B,eAAe,CAAC6B,QAA3C,GAAuD9C,cAA3G;YAA2H,GAAG,EAAC;UAA/H;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAK,SAAS,EAAC,cAAf;UAAA,uBACI;YAAK,SAAS,EAAC,oBAAf;YAAA,wBACI;cAAO,GAAG,EAAC,YAAX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAO,SAAS,EAAC,UAAjB;cAA4B,IAAI,EAAC,kBAAjC;cAAoD,IAAI,EAAC,MAAzD;cAAgE,EAAE,EAAC,YAAnE;cAAgF,QAAQ,EAAE4C;YAA1F;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAbJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QAFJ;AAgCH;;GA9GQpC,Y;UAK0CN,W;;;KAL1CM,Y;;AAgHT,MAAMuC,eAAe,GAAI3B,KAAD,IAAW;EAC/B,OAAO;IACHH,eAAe,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,eADhC;IAEHE,SAAS,EAAEC,KAAK,CAACC,WAAN,CAAkBF,SAF1B;IAGHD,QAAQ,EAAEE,KAAK,CAACC,WAAN,CAAkBH;EAHzB,CAAP;AAKH,CAND;;AAQA,MAAM8B,cAAc,GAAG;EAAE5C,kBAAF;EAAsBC,6BAAtB;EAAoDC;AAApD,CAAvB;AACA,eAAeH,OAAO,CAAC4C,eAAD,EAAkBC,cAAlB,CAAP,CAAyCxC,YAAzC,CAAf"},"metadata":{},"sourceType":"module"}